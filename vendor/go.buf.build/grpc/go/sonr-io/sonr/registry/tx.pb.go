// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: registry/tx.proto

package registry

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MsgRegisterService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Creator is the account address of the creator of the service.
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// Service Name is the endpoint of the service.
	ServiceName string `protobuf:"bytes,2,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	// JWT is the JWT used to authenticate the service.
	Jwt string `protobuf:"bytes,3,opt,name=jwt,proto3" json:"jwt,omitempty"`
}

func (x *MsgRegisterService) Reset() {
	*x = MsgRegisterService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_tx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRegisterService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRegisterService) ProtoMessage() {}

func (x *MsgRegisterService) ProtoReflect() protoreflect.Message {
	mi := &file_registry_tx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRegisterService.ProtoReflect.Descriptor instead.
func (*MsgRegisterService) Descriptor() ([]byte, []int) {
	return file_registry_tx_proto_rawDescGZIP(), []int{0}
}

func (x *MsgRegisterService) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgRegisterService) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *MsgRegisterService) GetJwt() string {
	if x != nil {
		return x.Jwt
	}
	return ""
}

type MsgRegisterServiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name that was registered
	IsSuccess bool `protobuf:"varint,1,opt,name=isSuccess,proto3" json:"isSuccess,omitempty"`
	// The Did string in url format i.e. did:sonr:<did>
	DidUrl string `protobuf:"bytes,2,opt,name=didUrl,proto3" json:"didUrl,omitempty"`
	// The Document for the registered DID in Json format
	DidDocumentJson string `protobuf:"bytes,3,opt,name=didDocumentJson,proto3" json:"didDocumentJson,omitempty"`
}

func (x *MsgRegisterServiceResponse) Reset() {
	*x = MsgRegisterServiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_tx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRegisterServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRegisterServiceResponse) ProtoMessage() {}

func (x *MsgRegisterServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_tx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRegisterServiceResponse.ProtoReflect.Descriptor instead.
func (*MsgRegisterServiceResponse) Descriptor() ([]byte, []int) {
	return file_registry_tx_proto_rawDescGZIP(), []int{1}
}

func (x *MsgRegisterServiceResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *MsgRegisterServiceResponse) GetDidUrl() string {
	if x != nil {
		return x.DidUrl
	}
	return ""
}

func (x *MsgRegisterServiceResponse) GetDidDocumentJson() string {
	if x != nil {
		return x.DidDocumentJson
	}
	return ""
}

// MsgRegisterName is a request to register a name with the ".snr" name of a peer
type MsgRegisterName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Account address of the name owner
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	NameToRegister string `protobuf:"bytes,2,opt,name=nameToRegister,proto3" json:"nameToRegister,omitempty"`
	// Device Id of the client node
	Payload map[string]string `protobuf:"bytes,3,rep,name=payload,proto3" json:"payload,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Client side JSON Web Token for AssertionMethod
	Jwk []*MsgRegisterName_JwkEntry `protobuf:"bytes,4,rep,name=jwk,proto3" json:"jwk,omitempty"`
}

func (x *MsgRegisterName) Reset() {
	*x = MsgRegisterName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_tx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRegisterName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRegisterName) ProtoMessage() {}

func (x *MsgRegisterName) ProtoReflect() protoreflect.Message {
	mi := &file_registry_tx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRegisterName.ProtoReflect.Descriptor instead.
func (*MsgRegisterName) Descriptor() ([]byte, []int) {
	return file_registry_tx_proto_rawDescGZIP(), []int{2}
}

func (x *MsgRegisterName) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgRegisterName) GetNameToRegister() string {
	if x != nil {
		return x.NameToRegister
	}
	return ""
}

func (x *MsgRegisterName) GetPayload() map[string]string {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *MsgRegisterName) GetJwk() []*MsgRegisterName_JwkEntry {
	if x != nil {
		return x.Jwk
	}
	return nil
}

type MsgRegisterNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name that was registered
	IsSuccess bool `protobuf:"varint,1,opt,name=isSuccess,proto3" json:"isSuccess,omitempty"`
	// The Did string in url format i.e. did:sonr:<did>
	DidUrl string `protobuf:"bytes,2,opt,name=didUrl,proto3" json:"didUrl,omitempty"`
	// The Document for the registered DID in Json format
	DidDocumentJson string `protobuf:"bytes,3,opt,name=didDocumentJson,proto3" json:"didDocumentJson,omitempty"`
}

func (x *MsgRegisterNameResponse) Reset() {
	*x = MsgRegisterNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_tx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRegisterNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRegisterNameResponse) ProtoMessage() {}

func (x *MsgRegisterNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_tx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRegisterNameResponse.ProtoReflect.Descriptor instead.
func (*MsgRegisterNameResponse) Descriptor() ([]byte, []int) {
	return file_registry_tx_proto_rawDescGZIP(), []int{3}
}

func (x *MsgRegisterNameResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *MsgRegisterNameResponse) GetDidUrl() string {
	if x != nil {
		return x.DidUrl
	}
	return ""
}

func (x *MsgRegisterNameResponse) GetDidDocumentJson() string {
	if x != nil {
		return x.DidDocumentJson
	}
	return ""
}

// ask to see if a name is available
type MsgCheckName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Account address of the name owner
	NameToRegister string `protobuf:"bytes,1,opt,name=nameToRegister,proto3" json:"nameToRegister,omitempty"`
	// Account address of the name owner
	Creator string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (x *MsgCheckName) Reset() {
	*x = MsgCheckName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_tx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCheckName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCheckName) ProtoMessage() {}

func (x *MsgCheckName) ProtoReflect() protoreflect.Message {
	mi := &file_registry_tx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCheckName.ProtoReflect.Descriptor instead.
func (*MsgCheckName) Descriptor() ([]byte, []int) {
	return file_registry_tx_proto_rawDescGZIP(), []int{4}
}

func (x *MsgCheckName) GetNameToRegister() string {
	if x != nil {
		return x.NameToRegister
	}
	return ""
}

func (x *MsgCheckName) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

// ask to see if a name is available
type MsgCheckNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Is the name available
	IsAvailable bool `protobuf:"varint,1,opt,name=isAvailable,proto3" json:"isAvailable,omitempty"`
}

func (x *MsgCheckNameResponse) Reset() {
	*x = MsgCheckNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_tx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCheckNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCheckNameResponse) ProtoMessage() {}

func (x *MsgCheckNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_tx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCheckNameResponse.ProtoReflect.Descriptor instead.
func (*MsgCheckNameResponse) Descriptor() ([]byte, []int) {
	return file_registry_tx_proto_rawDescGZIP(), []int{5}
}

func (x *MsgCheckNameResponse) GetIsAvailable() bool {
	if x != nil {
		return x.IsAvailable
	}
	return false
}

// MsgAccessName defines the MsgAccessName transaction.
type MsgAccessName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The account that is accessing the name
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// The name to access
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The Public Key of the peer to access
	PublicKey string `protobuf:"bytes,3,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	// The Libp2p peer ID of the peer to access
	PeerId string `protobuf:"bytes,4,opt,name=peerId,proto3" json:"peerId,omitempty"`
}

func (x *MsgAccessName) Reset() {
	*x = MsgAccessName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_tx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAccessName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAccessName) ProtoMessage() {}

func (x *MsgAccessName) ProtoReflect() protoreflect.Message {
	mi := &file_registry_tx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAccessName.ProtoReflect.Descriptor instead.
func (*MsgAccessName) Descriptor() ([]byte, []int) {
	return file_registry_tx_proto_rawDescGZIP(), []int{6}
}

func (x *MsgAccessName) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgAccessName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MsgAccessName) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *MsgAccessName) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

type MsgAccessNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did       string `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
	PublicKey string `protobuf:"bytes,2,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	PeerId    string `protobuf:"bytes,3,opt,name=peerId,proto3" json:"peerId,omitempty"`
}

func (x *MsgAccessNameResponse) Reset() {
	*x = MsgAccessNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_tx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAccessNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAccessNameResponse) ProtoMessage() {}

func (x *MsgAccessNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_tx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAccessNameResponse.ProtoReflect.Descriptor instead.
func (*MsgAccessNameResponse) Descriptor() ([]byte, []int) {
	return file_registry_tx_proto_rawDescGZIP(), []int{7}
}

func (x *MsgAccessNameResponse) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *MsgAccessNameResponse) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *MsgAccessNameResponse) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

type MsgUpdateName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The account that owns the name.
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// The did of the peer to update the name of
	Did string `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
	// The Updated Metadata
	Metadata map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // optional
}

func (x *MsgUpdateName) Reset() {
	*x = MsgUpdateName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_tx_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateName) ProtoMessage() {}

func (x *MsgUpdateName) ProtoReflect() protoreflect.Message {
	mi := &file_registry_tx_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateName.ProtoReflect.Descriptor instead.
func (*MsgUpdateName) Descriptor() ([]byte, []int) {
	return file_registry_tx_proto_rawDescGZIP(), []int{8}
}

func (x *MsgUpdateName) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateName) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *MsgUpdateName) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type MsgUpdateNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DidDocument string            `protobuf:"bytes,1,opt,name=didDocument,proto3" json:"didDocument,omitempty"`
	Metadata    map[string]string `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // optional
}

func (x *MsgUpdateNameResponse) Reset() {
	*x = MsgUpdateNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_tx_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateNameResponse) ProtoMessage() {}

func (x *MsgUpdateNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_tx_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateNameResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateNameResponse) Descriptor() ([]byte, []int) {
	return file_registry_tx_proto_rawDescGZIP(), []int{9}
}

func (x *MsgUpdateNameResponse) GetDidDocument() string {
	if x != nil {
		return x.DidDocument
	}
	return ""
}

func (x *MsgUpdateNameResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type MsgAccessService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The account that is accessing the service
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// The name of the service to access
	Did string `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
}

func (x *MsgAccessService) Reset() {
	*x = MsgAccessService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_tx_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAccessService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAccessService) ProtoMessage() {}

func (x *MsgAccessService) ProtoReflect() protoreflect.Message {
	mi := &file_registry_tx_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAccessService.ProtoReflect.Descriptor instead.
func (*MsgAccessService) Descriptor() ([]byte, []int) {
	return file_registry_tx_proto_rawDescGZIP(), []int{10}
}

func (x *MsgAccessService) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgAccessService) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

type MsgAccessServiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Code of the response
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// Message of the response
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Data of the response
	Metadata map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MsgAccessServiceResponse) Reset() {
	*x = MsgAccessServiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_tx_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAccessServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAccessServiceResponse) ProtoMessage() {}

func (x *MsgAccessServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_tx_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAccessServiceResponse.ProtoReflect.Descriptor instead.
func (*MsgAccessServiceResponse) Descriptor() ([]byte, []int) {
	return file_registry_tx_proto_rawDescGZIP(), []int{11}
}

func (x *MsgAccessServiceResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MsgAccessServiceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MsgAccessServiceResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type MsgUpdateService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The account that owns the name.
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// The name of the peer to update the service details of
	Did string `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
	// The updated configuration for the service
	Configuration map[string]string `protobuf:"bytes,3,rep,name=configuration,proto3" json:"configuration,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The metadata for any service information required
	Metadata map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // optional
}

func (x *MsgUpdateService) Reset() {
	*x = MsgUpdateService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_tx_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateService) ProtoMessage() {}

func (x *MsgUpdateService) ProtoReflect() protoreflect.Message {
	mi := &file_registry_tx_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateService.ProtoReflect.Descriptor instead.
func (*MsgUpdateService) Descriptor() ([]byte, []int) {
	return file_registry_tx_proto_rawDescGZIP(), []int{12}
}

func (x *MsgUpdateService) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateService) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *MsgUpdateService) GetConfiguration() map[string]string {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *MsgUpdateService) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type MsgUpdateServiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DidDocument string `protobuf:"bytes,1,opt,name=didDocument,proto3" json:"didDocument,omitempty"`
	// The updated configuration for the service
	Configuration map[string]string `protobuf:"bytes,2,rep,name=configuration,proto3" json:"configuration,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The metadata for any service information required
	Metadata map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // optional
}

func (x *MsgUpdateServiceResponse) Reset() {
	*x = MsgUpdateServiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_tx_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateServiceResponse) ProtoMessage() {}

func (x *MsgUpdateServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_tx_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateServiceResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateServiceResponse) Descriptor() ([]byte, []int) {
	return file_registry_tx_proto_rawDescGZIP(), []int{13}
}

func (x *MsgUpdateServiceResponse) GetDidDocument() string {
	if x != nil {
		return x.DidDocument
	}
	return ""
}

func (x *MsgUpdateServiceResponse) GetConfiguration() map[string]string {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *MsgUpdateServiceResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type MsgCreateWhoIs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Did     string `protobuf:"bytes,3,opt,name=did,proto3" json:"did,omitempty"`
	Value   string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MsgCreateWhoIs) Reset() {
	*x = MsgCreateWhoIs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_tx_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateWhoIs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateWhoIs) ProtoMessage() {}

func (x *MsgCreateWhoIs) ProtoReflect() protoreflect.Message {
	mi := &file_registry_tx_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCreateWhoIs.ProtoReflect.Descriptor instead.
func (*MsgCreateWhoIs) Descriptor() ([]byte, []int) {
	return file_registry_tx_proto_rawDescGZIP(), []int{14}
}

func (x *MsgCreateWhoIs) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgCreateWhoIs) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

func (x *MsgCreateWhoIs) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *MsgCreateWhoIs) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type MsgCreateWhoIsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgCreateWhoIsResponse) Reset() {
	*x = MsgCreateWhoIsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_tx_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateWhoIsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateWhoIsResponse) ProtoMessage() {}

func (x *MsgCreateWhoIsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_tx_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCreateWhoIsResponse.ProtoReflect.Descriptor instead.
func (*MsgCreateWhoIsResponse) Descriptor() ([]byte, []int) {
	return file_registry_tx_proto_rawDescGZIP(), []int{15}
}

type MsgUpdateWhoIs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Did     string `protobuf:"bytes,3,opt,name=did,proto3" json:"did,omitempty"`
	Value   string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MsgUpdateWhoIs) Reset() {
	*x = MsgUpdateWhoIs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_tx_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateWhoIs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateWhoIs) ProtoMessage() {}

func (x *MsgUpdateWhoIs) ProtoReflect() protoreflect.Message {
	mi := &file_registry_tx_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateWhoIs.ProtoReflect.Descriptor instead.
func (*MsgUpdateWhoIs) Descriptor() ([]byte, []int) {
	return file_registry_tx_proto_rawDescGZIP(), []int{16}
}

func (x *MsgUpdateWhoIs) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateWhoIs) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

func (x *MsgUpdateWhoIs) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *MsgUpdateWhoIs) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type MsgUpdateWhoIsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateWhoIsResponse) Reset() {
	*x = MsgUpdateWhoIsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_tx_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateWhoIsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateWhoIsResponse) ProtoMessage() {}

func (x *MsgUpdateWhoIsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_tx_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateWhoIsResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateWhoIsResponse) Descriptor() ([]byte, []int) {
	return file_registry_tx_proto_rawDescGZIP(), []int{17}
}

type MsgDeleteWhoIs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *MsgDeleteWhoIs) Reset() {
	*x = MsgDeleteWhoIs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_tx_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteWhoIs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteWhoIs) ProtoMessage() {}

func (x *MsgDeleteWhoIs) ProtoReflect() protoreflect.Message {
	mi := &file_registry_tx_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteWhoIs.ProtoReflect.Descriptor instead.
func (*MsgDeleteWhoIs) Descriptor() ([]byte, []int) {
	return file_registry_tx_proto_rawDescGZIP(), []int{18}
}

func (x *MsgDeleteWhoIs) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgDeleteWhoIs) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

type MsgDeleteWhoIsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDeleteWhoIsResponse) Reset() {
	*x = MsgDeleteWhoIsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_tx_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteWhoIsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteWhoIsResponse) ProtoMessage() {}

func (x *MsgDeleteWhoIsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_tx_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteWhoIsResponse.ProtoReflect.Descriptor instead.
func (*MsgDeleteWhoIsResponse) Descriptor() ([]byte, []int) {
	return file_registry_tx_proto_rawDescGZIP(), []int{19}
}

// JwkEntry used to mint the name
type MsgRegisterName_JwkEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Key Id
	Kid string `protobuf:"bytes,1,opt,name=kid,proto3" json:"kid,omitempty"`
	// Key Curve
	Crv string `protobuf:"bytes,2,opt,name=crv,proto3" json:"crv,omitempty"`
	// Key Use
	Use string `protobuf:"bytes,3,opt,name=use,proto3" json:"use,omitempty"`
	// Key Algorithm
	Alg string `protobuf:"bytes,4,opt,name=alg,proto3" json:"alg,omitempty"`
	// Key Value
	X string `protobuf:"bytes,5,opt,name=x,proto3" json:"x,omitempty"`
	// Key Value
	Y string `protobuf:"bytes,6,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *MsgRegisterName_JwkEntry) Reset() {
	*x = MsgRegisterName_JwkEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_tx_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRegisterName_JwkEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRegisterName_JwkEntry) ProtoMessage() {}

func (x *MsgRegisterName_JwkEntry) ProtoReflect() protoreflect.Message {
	mi := &file_registry_tx_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRegisterName_JwkEntry.ProtoReflect.Descriptor instead.
func (*MsgRegisterName_JwkEntry) Descriptor() ([]byte, []int) {
	return file_registry_tx_proto_rawDescGZIP(), []int{2, 1}
}

func (x *MsgRegisterName_JwkEntry) GetKid() string {
	if x != nil {
		return x.Kid
	}
	return ""
}

func (x *MsgRegisterName_JwkEntry) GetCrv() string {
	if x != nil {
		return x.Crv
	}
	return ""
}

func (x *MsgRegisterName_JwkEntry) GetUse() string {
	if x != nil {
		return x.Use
	}
	return ""
}

func (x *MsgRegisterName_JwkEntry) GetAlg() string {
	if x != nil {
		return x.Alg
	}
	return ""
}

func (x *MsgRegisterName_JwkEntry) GetX() string {
	if x != nil {
		return x.X
	}
	return ""
}

func (x *MsgRegisterName_JwkEntry) GetY() string {
	if x != nil {
		return x.Y
	}
	return ""
}

var File_registry_tx_proto protoreflect.FileDescriptor

var file_registry_tx_proto_rawDesc = []byte{
	0x0a, 0x11, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x74, 0x78, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x14, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x1a, 0x15, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x2f, 0x77, 0x68, 0x6f, 0x5f, 0x69, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x62, 0x0a, 0x12, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x77, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6a, 0x77, 0x74, 0x22, 0x7c, 0x0a, 0x1a, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x64, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x69, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x69, 0x64, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x64, 0x69, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4a, 0x73,
	0x6f, 0x6e, 0x22, 0x8f, 0x03, 0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x6f,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x4c, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x69, 0x6f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x40, 0x0a, 0x03, 0x6a, 0x77, 0x6b, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x2e, 0x4a, 0x77, 0x6b, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x03, 0x6a, 0x77, 0x6b, 0x1a, 0x3a, 0x0a, 0x0c, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x6e, 0x0a, 0x08, 0x4a, 0x77, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x72, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x63, 0x72, 0x76, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x6c, 0x67, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x01, 0x79, 0x22, 0x79, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x69, 0x64, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x69, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x69, 0x64, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x64, 0x69, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x22,
	0x50, 0x0a, 0x0c, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x22, 0x38, 0x0a, 0x14, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x69, 0x73, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x73, 0x0a, 0x0d, 0x4d,
	0x73, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x5f, 0x0a, 0x15, 0x4d, 0x73, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49,
	0x64, 0x22, 0xc7, 0x01, 0x0a, 0x0d, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x64, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x12,
	0x4d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b,
	0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xcd, 0x01, 0x0a, 0x15,
	0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x64, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x64, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x55, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x69, 0x6f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b,
	0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3e, 0x0a, 0x10, 0x4d,
	0x73, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x22, 0xdf, 0x01, 0x0a, 0x18,
	0x4d, 0x73, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x58, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69,
	0x6f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e,
	0x4d, 0x73, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf0, 0x02,
	0x0a, 0x10, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x64, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x5f,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x50, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x40, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xfe, 0x02, 0x0a, 0x18, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x69, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x67, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x4d, 0x73,
	0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x69, 0x6f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x40, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x68, 0x0a, 0x0e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x68,
	0x6f, 0x49, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x4d,
	0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x68, 0x6f, 0x49, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x68, 0x0a, 0x0e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x57, 0x68, 0x6f, 0x49, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x18, 0x0a, 0x16, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x68, 0x6f, 0x49,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x0a, 0x0e, 0x4d, 0x73, 0x67,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x68, 0x6f, 0x49, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x18, 0x0a, 0x16, 0x4d,
	0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x68, 0x6f, 0x49, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xf2, 0x07, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x6d, 0x0a,
	0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x28, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x30, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x69, 0x6f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x0c,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x1a, 0x2d, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5b, 0x0a, 0x09, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x22, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x1a, 0x2a, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5e, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x1a, 0x2b, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x1a, 0x2b, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x67, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x26, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x2e, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69,
	0x6f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e,
	0x4d, 0x73, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x26, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x69, 0x6f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x1a, 0x2e, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x61, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x68, 0x6f, 0x49, 0x73,
	0x12, 0x24, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x57, 0x68, 0x6f, 0x49, 0x73, 0x1a, 0x2c, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x4d, 0x73,
	0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x68, 0x6f, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x68,
	0x6f, 0x49, 0x73, 0x12, 0x24, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x57, 0x68, 0x6f, 0x49, 0x73, 0x1a, 0x2c, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x69, 0x6f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x68, 0x6f, 0x49, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x57, 0x68, 0x6f, 0x49, 0x73, 0x12, 0x24, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x4d, 0x73,
	0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x68, 0x6f, 0x49, 0x73, 0x1a, 0x2c, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x68, 0x6f,
	0x49, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x6f,
	0x2e, 0x62, 0x75, 0x66, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f,
	0x67, 0x6f, 0x2f, 0x73, 0x6f, 0x6e, 0x72, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6f, 0x6e, 0x72, 0x2f,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_registry_tx_proto_rawDescOnce sync.Once
	file_registry_tx_proto_rawDescData = file_registry_tx_proto_rawDesc
)

func file_registry_tx_proto_rawDescGZIP() []byte {
	file_registry_tx_proto_rawDescOnce.Do(func() {
		file_registry_tx_proto_rawDescData = protoimpl.X.CompressGZIP(file_registry_tx_proto_rawDescData)
	})
	return file_registry_tx_proto_rawDescData
}

var file_registry_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_registry_tx_proto_goTypes = []interface{}{
	(*MsgRegisterService)(nil),         // 0: sonrio.sonr.registry.MsgRegisterService
	(*MsgRegisterServiceResponse)(nil), // 1: sonrio.sonr.registry.MsgRegisterServiceResponse
	(*MsgRegisterName)(nil),            // 2: sonrio.sonr.registry.MsgRegisterName
	(*MsgRegisterNameResponse)(nil),    // 3: sonrio.sonr.registry.MsgRegisterNameResponse
	(*MsgCheckName)(nil),               // 4: sonrio.sonr.registry.MsgCheckName
	(*MsgCheckNameResponse)(nil),       // 5: sonrio.sonr.registry.MsgCheckNameResponse
	(*MsgAccessName)(nil),              // 6: sonrio.sonr.registry.MsgAccessName
	(*MsgAccessNameResponse)(nil),      // 7: sonrio.sonr.registry.MsgAccessNameResponse
	(*MsgUpdateName)(nil),              // 8: sonrio.sonr.registry.MsgUpdateName
	(*MsgUpdateNameResponse)(nil),      // 9: sonrio.sonr.registry.MsgUpdateNameResponse
	(*MsgAccessService)(nil),           // 10: sonrio.sonr.registry.MsgAccessService
	(*MsgAccessServiceResponse)(nil),   // 11: sonrio.sonr.registry.MsgAccessServiceResponse
	(*MsgUpdateService)(nil),           // 12: sonrio.sonr.registry.MsgUpdateService
	(*MsgUpdateServiceResponse)(nil),   // 13: sonrio.sonr.registry.MsgUpdateServiceResponse
	(*MsgCreateWhoIs)(nil),             // 14: sonrio.sonr.registry.MsgCreateWhoIs
	(*MsgCreateWhoIsResponse)(nil),     // 15: sonrio.sonr.registry.MsgCreateWhoIsResponse
	(*MsgUpdateWhoIs)(nil),             // 16: sonrio.sonr.registry.MsgUpdateWhoIs
	(*MsgUpdateWhoIsResponse)(nil),     // 17: sonrio.sonr.registry.MsgUpdateWhoIsResponse
	(*MsgDeleteWhoIs)(nil),             // 18: sonrio.sonr.registry.MsgDeleteWhoIs
	(*MsgDeleteWhoIsResponse)(nil),     // 19: sonrio.sonr.registry.MsgDeleteWhoIsResponse
	nil,                                // 20: sonrio.sonr.registry.MsgRegisterName.PayloadEntry
	(*MsgRegisterName_JwkEntry)(nil),   // 21: sonrio.sonr.registry.MsgRegisterName.JwkEntry
	nil,                                // 22: sonrio.sonr.registry.MsgUpdateName.MetadataEntry
	nil,                                // 23: sonrio.sonr.registry.MsgUpdateNameResponse.MetadataEntry
	nil,                                // 24: sonrio.sonr.registry.MsgAccessServiceResponse.MetadataEntry
	nil,                                // 25: sonrio.sonr.registry.MsgUpdateService.ConfigurationEntry
	nil,                                // 26: sonrio.sonr.registry.MsgUpdateService.MetadataEntry
	nil,                                // 27: sonrio.sonr.registry.MsgUpdateServiceResponse.ConfigurationEntry
	nil,                                // 28: sonrio.sonr.registry.MsgUpdateServiceResponse.MetadataEntry
}
var file_registry_tx_proto_depIdxs = []int32{
	20, // 0: sonrio.sonr.registry.MsgRegisterName.payload:type_name -> sonrio.sonr.registry.MsgRegisterName.PayloadEntry
	21, // 1: sonrio.sonr.registry.MsgRegisterName.jwk:type_name -> sonrio.sonr.registry.MsgRegisterName.JwkEntry
	22, // 2: sonrio.sonr.registry.MsgUpdateName.metadata:type_name -> sonrio.sonr.registry.MsgUpdateName.MetadataEntry
	23, // 3: sonrio.sonr.registry.MsgUpdateNameResponse.metadata:type_name -> sonrio.sonr.registry.MsgUpdateNameResponse.MetadataEntry
	24, // 4: sonrio.sonr.registry.MsgAccessServiceResponse.metadata:type_name -> sonrio.sonr.registry.MsgAccessServiceResponse.MetadataEntry
	25, // 5: sonrio.sonr.registry.MsgUpdateService.configuration:type_name -> sonrio.sonr.registry.MsgUpdateService.ConfigurationEntry
	26, // 6: sonrio.sonr.registry.MsgUpdateService.metadata:type_name -> sonrio.sonr.registry.MsgUpdateService.MetadataEntry
	27, // 7: sonrio.sonr.registry.MsgUpdateServiceResponse.configuration:type_name -> sonrio.sonr.registry.MsgUpdateServiceResponse.ConfigurationEntry
	28, // 8: sonrio.sonr.registry.MsgUpdateServiceResponse.metadata:type_name -> sonrio.sonr.registry.MsgUpdateServiceResponse.MetadataEntry
	0,  // 9: sonrio.sonr.registry.Msg.RegisterService:input_type -> sonrio.sonr.registry.MsgRegisterService
	2,  // 10: sonrio.sonr.registry.Msg.RegisterName:input_type -> sonrio.sonr.registry.MsgRegisterName
	4,  // 11: sonrio.sonr.registry.Msg.CheckName:input_type -> sonrio.sonr.registry.MsgCheckName
	6,  // 12: sonrio.sonr.registry.Msg.AccessName:input_type -> sonrio.sonr.registry.MsgAccessName
	8,  // 13: sonrio.sonr.registry.Msg.UpdateName:input_type -> sonrio.sonr.registry.MsgUpdateName
	10, // 14: sonrio.sonr.registry.Msg.AccessService:input_type -> sonrio.sonr.registry.MsgAccessService
	12, // 15: sonrio.sonr.registry.Msg.UpdateService:input_type -> sonrio.sonr.registry.MsgUpdateService
	14, // 16: sonrio.sonr.registry.Msg.CreateWhoIs:input_type -> sonrio.sonr.registry.MsgCreateWhoIs
	16, // 17: sonrio.sonr.registry.Msg.UpdateWhoIs:input_type -> sonrio.sonr.registry.MsgUpdateWhoIs
	18, // 18: sonrio.sonr.registry.Msg.DeleteWhoIs:input_type -> sonrio.sonr.registry.MsgDeleteWhoIs
	1,  // 19: sonrio.sonr.registry.Msg.RegisterService:output_type -> sonrio.sonr.registry.MsgRegisterServiceResponse
	3,  // 20: sonrio.sonr.registry.Msg.RegisterName:output_type -> sonrio.sonr.registry.MsgRegisterNameResponse
	5,  // 21: sonrio.sonr.registry.Msg.CheckName:output_type -> sonrio.sonr.registry.MsgCheckNameResponse
	7,  // 22: sonrio.sonr.registry.Msg.AccessName:output_type -> sonrio.sonr.registry.MsgAccessNameResponse
	9,  // 23: sonrio.sonr.registry.Msg.UpdateName:output_type -> sonrio.sonr.registry.MsgUpdateNameResponse
	11, // 24: sonrio.sonr.registry.Msg.AccessService:output_type -> sonrio.sonr.registry.MsgAccessServiceResponse
	13, // 25: sonrio.sonr.registry.Msg.UpdateService:output_type -> sonrio.sonr.registry.MsgUpdateServiceResponse
	15, // 26: sonrio.sonr.registry.Msg.CreateWhoIs:output_type -> sonrio.sonr.registry.MsgCreateWhoIsResponse
	17, // 27: sonrio.sonr.registry.Msg.UpdateWhoIs:output_type -> sonrio.sonr.registry.MsgUpdateWhoIsResponse
	19, // 28: sonrio.sonr.registry.Msg.DeleteWhoIs:output_type -> sonrio.sonr.registry.MsgDeleteWhoIsResponse
	19, // [19:29] is the sub-list for method output_type
	9,  // [9:19] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_registry_tx_proto_init() }
func file_registry_tx_proto_init() {
	if File_registry_tx_proto != nil {
		return
	}
	file_registry_who_is_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_registry_tx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRegisterService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_tx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRegisterServiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_tx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRegisterName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_tx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRegisterNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_tx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCheckName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_tx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCheckNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_tx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAccessName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_tx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAccessNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_tx_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_tx_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_tx_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAccessService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_tx_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAccessServiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_tx_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_tx_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateServiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_tx_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateWhoIs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_tx_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateWhoIsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_tx_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateWhoIs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_tx_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateWhoIsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_tx_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteWhoIs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_tx_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteWhoIsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_tx_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRegisterName_JwkEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_registry_tx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_registry_tx_proto_goTypes,
		DependencyIndexes: file_registry_tx_proto_depIdxs,
		MessageInfos:      file_registry_tx_proto_msgTypes,
	}.Build()
	File_registry_tx_proto = out.File
	file_registry_tx_proto_rawDesc = nil
	file_registry_tx_proto_goTypes = nil
	file_registry_tx_proto_depIdxs = nil
}
